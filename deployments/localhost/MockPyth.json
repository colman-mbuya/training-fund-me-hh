{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "conf",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethPrice",
      "outputs": [
        {
          "internalType": "int64",
          "name": "",
          "type": "int64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expo",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "priceId",
          "type": "bytes32"
        }
      ],
      "name": "getPriceUnsafe",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int64",
              "name": "price",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "conf",
              "type": "uint64"
            },
            {
              "internalType": "int32",
              "name": "expo",
              "type": "int32"
            },
            {
              "internalType": "uint256",
              "name": "publishTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct PythStructs.Price",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publishTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc19215f9399ef24f30b08241c74cbe699bfc5476cdcf44e97897e30c6bc91459",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "347149",
    "logsBloom": "0x
    "blockHash": "0xa383b3e85dfbee78b140875f793a55e5d6c1de71ce18a7dfde90a1976af5b6f5",
    "transactionHash": "0xc19215f9399ef24f30b08241c74cbe699bfc5476cdcf44e97897e30c6bc91459",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "347149",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7f4b1a22c80aa5614721215fc3f66ac7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"conf\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPrice\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expo\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"priceId\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publishTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockPyth.sol\":\"MockPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.0;\\n\\ncontract PythStructs {\\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\\n    //\\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\\n    // Both the price and confidence are stored in a fixed-point numeric representation,\\n    // `x * (10^expo)`, where `expo` is the exponent.\\n    //\\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\\n    // to how this price safely.\\n    struct Price {\\n        // Price\\n        int64 price;\\n        // Confidence interval around the price\\n        uint64 conf;\\n        // Price exponent\\n        int32 expo;\\n        // Unix timestamp describing when the price was published\\n        uint publishTime;\\n    }\\n\\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\\n    struct PriceFeed {\\n        // The price ID.\\n        bytes32 id;\\n        // Latest available price\\n        Price price;\\n        // Latest available exponentially-weighted moving average price\\n        Price emaPrice;\\n    }\\n}\\n\",\"keccak256\":\"0xade221177dda98ebd194c363f264ceea125bde0e6a7a72f7b54da3ac60316894\",\"license\":\"Apache-2.0\"},\"contracts/mocks/MockPyth.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.19;\\n\\nimport {PythStructs} from \\\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\\\";\\n\\ncontract MockPyth {\\n    int64 public constant ethPrice = 200000000000;\\n    int32 public constant expo = -8;\\n    uint64 public constant conf = 0;\\n    uint public publishTime = block.timestamp;\\n\\n    function getPriceUnsafe(bytes32 priceId) public view returns (PythStructs.Price memory) {\\n        require(priceId != 0, \\\"You need to pass through a priceId\\\");\\n        return PythStructs.Price({\\n            price: ethPrice,\\n            conf: conf,\\n            expo: expo,\\n            publishTime: publishTime\\n        });\\n    }\\n}\",\"keccak256\":\"0x6941418838f5bfa7ff5719da51288a7786937d44078c2eb65d909f0c55ecdf41\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60806040524260005534801561001457600080fd5b506104ee806100246000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063177927291461005c57806396834ad31461007a578063b0065d4b146100aa578063e467fa80146100c8578063ff186b2e146100e6575b600080fd5b610064610104565b6040516100719190610244565b60405180910390f35b610094600480360381019061008f919061029a565b610109565b6040516100a1919061037c565b60405180910390f35b6100b26101b6565b6040516100bf91906103a6565b60405180910390f35b6100d06101da565b6040516100dd91906103d0565b60405180910390f35b6100ee6101e0565b6040516100fb91906103fa565b60405180910390f35b600081565b6101116101e9565b6000801b8203610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610498565b60405180910390fd5b6040518060800160405280642e90edd00060070b8152602001600067ffffffffffffffff1681526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff860030b81526020016000548152509050919050565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff881565b60005481565b642e90edd00081565b6040518060800160405280600060070b8152602001600067ffffffffffffffff168152602001600060030b8152602001600081525090565b600067ffffffffffffffff82169050919050565b61023e81610221565b82525050565b60006020820190506102596000830184610235565b92915050565b600080fd5b6000819050919050565b61027781610264565b811461028257600080fd5b50565b6000813590506102948161026e565b92915050565b6000602082840312156102b0576102af61025f565b5b60006102be84828501610285565b91505092915050565b60008160070b9050919050565b6102dd816102c7565b82525050565b6102ec81610221565b82525050565b60008160030b9050919050565b610308816102f2565b82525050565b6000819050919050565b6103218161030e565b82525050565b60808201600082015161033d60008501826102d4565b50602082015161035060208501826102e3565b50604082015161036360408501826102ff565b5060608201516103766060850182610318565b50505050565b60006080820190506103916000830184610327565b92915050565b6103a0816102f2565b82525050565b60006020820190506103bb6000830184610397565b92915050565b6103ca8161030e565b82525050565b60006020820190506103e560008301846103c1565b92915050565b6103f4816102c7565b82525050565b600060208201905061040f60008301846103eb565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f2070617373207468726f756768206120707269636560008201527f4964000000000000000000000000000000000000000000000000000000000000602082015250565b6000610482602283610415565b915061048d82610426565b604082019050919050565b600060208201905081810360008301526104b181610475565b905091905056fea2646970667358221220352fb7a1680c8cae321ad49257db77e3b18d584ad44e5b1cab8967c0f12b66e164736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063177927291461005c57806396834ad31461007a578063b0065d4b146100aa578063e467fa80146100c8578063ff186b2e146100e6575b600080fd5b610064610104565b6040516100719190610244565b60405180910390f35b610094600480360381019061008f919061029a565b610109565b6040516100a1919061037c565b60405180910390f35b6100b26101b6565b6040516100bf91906103a6565b60405180910390f35b6100d06101da565b6040516100dd91906103d0565b60405180910390f35b6100ee6101e0565b6040516100fb91906103fa565b60405180910390f35b600081565b6101116101e9565b6000801b8203610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610498565b60405180910390fd5b6040518060800160405280642e90edd00060070b8152602001600067ffffffffffffffff1681526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff860030b81526020016000548152509050919050565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff881565b60005481565b642e90edd00081565b6040518060800160405280600060070b8152602001600067ffffffffffffffff168152602001600060030b8152602001600081525090565b600067ffffffffffffffff82169050919050565b61023e81610221565b82525050565b60006020820190506102596000830184610235565b92915050565b600080fd5b6000819050919050565b61027781610264565b811461028257600080fd5b50565b6000813590506102948161026e565b92915050565b6000602082840312156102b0576102af61025f565b5b60006102be84828501610285565b91505092915050565b60008160070b9050919050565b6102dd816102c7565b82525050565b6102ec81610221565b82525050565b60008160030b9050919050565b610308816102f2565b82525050565b6000819050919050565b6103218161030e565b82525050565b60808201600082015161033d60008501826102d4565b50602082015161035060208501826102e3565b50604082015161036360408501826102ff565b5060608201516103766060850182610318565b50505050565b60006080820190506103916000830184610327565b92915050565b6103a0816102f2565b82525050565b60006020820190506103bb6000830184610397565b92915050565b6103ca8161030e565b82525050565b60006020820190506103e560008301846103c1565b92915050565b6103f4816102c7565b82525050565b600060208201905061040f60008301846103eb565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f2070617373207468726f756768206120707269636560008201527f4964000000000000000000000000000000000000000000000000000000000000602082015250565b6000610482602283610415565b915061048d82610426565b604082019050919050565b600060208201905081810360008301526104b181610475565b905091905056fea2646970667358221220352fb7a1680c8cae321ad49257db77e3b18d584ad44e5b1cab8967c0f12b66e164736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 466,
        "contract": "contracts/mocks/MockPyth.sol:MockPyth",
        "label": "publishTime",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}